import pandas as pd
s = pd.Series([1,3,5,7,9])
#print(s)

data = {'name':['Alice' , 'Bob' , 'Charlie' , 'David'] , 
        'age' :[25 , 32 , 18 , 47] , 
        'city':['New York' , 'Paris' , 'London' , 'Berlin']}
 
df = pd.DataFrame(data)

df.set_index('name' , inplace = True)
# 選取 "Alice" 和 "Charlie" 兩行的 "age" 和 "city" 這兩列
result = df.loc[['Alice' , 'Charlie'] , ['age' , 'city'] ]
#print(result)

# 使用遮罩選取
#mask = df['age'] > 30 # 創建一個年齡大於30的遮罩
#print(df[mask])

mask = (df['age'] > 30) & (df['city'] == 'Paris') # 創建一個年齡大於30且城市為Paris的遮罩
#print(df[mask])

# 創建兩個DataFrame物件
data1 = {'name':['Alice' , 'Bob' , 'Charlie' , 'David'] , 
         'age' :[25,32,18,47] ,
         'city':['New York' , 'Paris' , 'London' , 'Berlin']}

df1 = pd.DataFrame(data1)
data2 = {'name':['Eva' , 'Bob' , 'Charlie' , 'David'] , 
         'age' :[29,23,37,31] ,
         'city':['Rome' , 'Sydney' , 'Tokyo' , 'Moscow']}

df2 = pd.DataFrame(data2)
# 進行加法
#print(df1 + df2)

# 按照age列進行排序，預設為升序排序
#print(df.sort_values(by = 'age'))
#print(df.sort_values(by = 'age' , ascending=False))

# 按照索引進行排序
#print(df.sort_index() )

# 沿著列軸合併
#print(pd.concat([df1 , df2] , axis = 0))

# 沿著行軸合併
#print(pd.concat([df1 , df2] , axis = 1))

#data1 = {'name':['Alice' , 'Bob' , 'Charlie' , 'David'],
#         'age':[25 , 32 , 18 , 47],
#         'city':['New York' , 'Paris' , 'London' , 'Berlin']}

#df1 = pd.DataFrame(data1)
#data2 = {'name':['Alice' , 'Bob' , 'Charlie' , 'David'],
#         'salary':[5000 , 6000 , 7000 , 8000]}

#df2 = pd.DataFrame(data2)
# 根據name欄位合併
#print(pd.merge(df1 , df2 , on = 'name'))

#data1 = {'age':[25 , 32 , 18 , 47] , 
#         'city':['New York' , 'Paris' , 'Lonon' , 'Berlin']}

#df1 = pd.DataFrame(data1 , index= ['Alice' , 'Bob' , 'Charlie' , 'David'])

#data2 = {'salary':[5000 , 6000 , 7000 , 8000]}
#df2 = pd.DataFrame(data2 , index= ['Alice' , 'Bob' , 'Charlie' , 'David'])

# 按照索引合併
#print(df1.join(df2))

data = {'name':['Alice' , 'Bob' , 'Charlie' , 'David' , 'Emma','Frank'],
        'age':[25 , 32 , 18 , 47 , 23 , 31],
        'gender':['female' , 'male' , 'female' , 'male','female' , 'male'],
        'city':['New York' , 'Paris' , 'London', 'Berlin' , 'New York' , 'Paris'],
        'salary':[50000 , 80000 , 25000 , 100000 , 35000 , 75000]}

df = pd.DataFrame(data)
# 按照 "city" 列的值進行分組，並對每個城市的人口數、平均年齡、平均薪資進行統計分析
grouped = df.groupby('city')
result = grouped.agg({'name':'count' ,'age': 'mean' , 'salary':  'mean'})
#print(result)

import pandas as pd
import numpy as np
df = pd.DataFrame(np.random.randint(10 , 40 , 60).reshape(-1 , 4))
#print(df)

# - 1. filtered by first column > 20?
filtered_df1 =  df[df.iloc[:,0] > 20] 
#print(filtered_df1)

# - 2. filtered by first column + second column > 50
filtered_df2 =  df[ (df.iloc[:,0] + df.iloc[:,1]) > 50 ] 
#print(filtered_df2)

# - 3. filtered by first column < 30 or second column > 30
filtered_df3 =  df[ (df.iloc[:,0] < 30) | (df.iloc[:,1] > 30) ] 
#print(filtered_df3)

# - 4. filtered by total sum of row > 100
filtered_df4 =  df[ df.sum(axis = 1) > 100 ]
#print(filtered_df4)

import pandas as pd
import numpy as np

d = [
    {'city':'Austin' , 'visitor':139 , 'weekday':'Sun'},
     {'city':'Dallas' , 'visitor':237 , 'weekday':'Sun'},
     {'city':'Austin' , 'visitor':326 , 'weekday':'Mon'},
     {'city':'Dallas' , 'visitor':456 , 'weekday':'Mon'},
]

# 將資料轉換成 DataFrame
df =  pd.DataFrame(d)

# 使用 groupby 函數計算不同 weekday 的 visitor 總和，並轉換成字典
weekday_visitor_sum = df.groupby("weekday")["visitor"].sum().to_dict()

#print(weekday_visitor_sum)

import pandas as pd

# 讀取 CSV 檔案
url = 'https://data.nhi.gov.tw/resource/Nhi_Fst/Fstdata.csv'
df = pd.read_csv(url)

# 從地址欄位中擷取縣市資訊
city = df['醫事機構地址'].str[:3]

# 計算每個縣市的剩餘快篩總數
city_total_remaining = df.groupby(city)['快篩試劑截至目前結餘存貨數量'].sum()

# 排序並選取前五高的資料
top_five_cities = city_total_remaining.sort_values(ascending=False).head(5)

#印出結果
print(top_five_cities)
