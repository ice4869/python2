#Task03-01
import requests
from bs4 import BeautifulSoup

# 發送 GET 請求取得網頁內容
url = 'https://movies.yahoo.com.tw/movie_thisweek.html'
response = requests.get(url)

# 使用 BeautifulSoup 解析網頁內容
soup = BeautifulSoup(response.text, 'html.parser')

# 找出目標元素，並提取資訊
movies = soup.select('ul.release_list li')
for movie in movies:
    # 中文名稱
    chinese_name = movie.select_one('div.release_movie_name a').text.strip()
    # 英文名稱
    english_name = movie.select_one('div.release_movie_name div.en').text.strip()
    # 上映日期
    release_date = movie.select_one('div.release_movie_time').text.strip()
    # 期待度
    expectation = movie.select_one('div.leveltext span').text.strip()

    #print('中文名稱：', chinese_name)
    #print('英文名稱：', english_name)
    #print('上映日期：', release_date)
    #print('期待度：', expectation)
    #print('--------------------------')

#Task03-02
import requests
from bs4 import BeautifulSoup

base_url = 'https://movies.yahoo.com.tw'
urls = ['/movie_thisweek.html' , '/movie_intheaters.html' , '/movie_comingsoon.html']

#逐一處理每個分頁的資料
for url in urls:
  response = requests.get(base_url+url)
  content = response.content

  #解析 HTML 內容
  soup = BeautifulSoup(content , 'html.parser')
  #print(soup)

  #取得電影區塊的元素
  movie_section = soup.select_one('div.release_box')
  #print(movie_section)
  #取得所有電影的資訊
  movies = movie_section.select('div.release_info_text')
  #print(movies)

  #逐一解析並輸出電影資訊
  for movie in movies:
    #取得中文名稱
    chinese_name = movie.select_one('div.release_movie_name a').text.strip()
    #print(chinese_name)

    #取得英文名稱
    english_name = movie.select_one('div.en').text.strip()
    #print(english_name)

    #取得上映日期
    release_date = movie.select_one('div.release_movie_time').text.strip()
    #print(release_date)

    #取得期待度
    expectation = movie.select_one('div.leveltext span').text.strip()
    #print(expectation)

    #輸出電影資訊
    #print('中文名稱：',chinese_name)
    #print('英文名稱：',english_name)
    #print(release_date)
    #print('期待度：',expectation)
    #print('- - - - - - - - - - - - - ')

 #
import sqlite3
 #建立SQLite 資料庫連線
conn = sqlite3.connect('test.db')

#建立一個名為 students 的資料表
conn.execute('''CREATE TABLE students
             (ID INT PRIMARY KEY NOT NULL,
             NAME TEXT NOT NULL,
             AGE INT NOT NULL,
             GRADE INT NOT NULL);''')

#插入一些資料
conn.execute("INSERT INTO students (ID , NAME , AGE , GRADE) \
             VALUES (1 , 'John' , 20 , 85) ")
conn.execute("INSERT INTO students (ID, NAME, AGE, GRADE) \
              VALUES (2, 'Mary', 21, 90)")
conn.execute("INSERT INTO students (ID, NAME, AGE, GRADE) \
              VALUES (3, 'Tom', 19, 78)")
conn.execute("INSERT INTO students (ID, NAME, AGE, GRADE) \
              VALUES (4, 'Lily', 22, 95)")

#提交更改
conn.commit()

#關閉資料庫連線
conn.close()

import pandas as pd 
import sqlite3
#建立 SQLite 資料庫連線
conn = sqlite3.connect('test.db')

#讀取資料表資料
df = pd.read_sql_query('SELECT * from students' , conn)

#關閉資料庫連線
conn.close()

#顯示 DateFrame
#print(df)

#建立 SQLite 資料庫連線
conn = sqlite3.connect('test.db')

#將 DataFrame的資料寫入資料庫
df.to_sql('students_new' , conn , if_exists = 'replace' , index = False)

#關閉資料庫連線
conn.close()

#Task03-03
import requests
from bs4 import BeautifulSoup
import pandas as pd
import sqlite3

base_url = 'http://movies.yahoo.com.tw'
urls = ['/movie_thisweek.html' , '/movie_intheaters.html' , '/movie_comingsoon.html']

#創建空的 DataFrame
df = pd.DataFrame(columns = ['chinese_name' , 'english_name' , 'release_date' , 'expectation'])

#逐一處理每個分頁的數據
for url in urls:
  response = requests.get(base_url + url )
  content = response.content

  #解析 HTML 內容內容
  soup = BeautifulSoup(content , 'html.parser')

  #取得電影區塊的元素
  movie_section = soup.select_one('div.release_box')

  #取得所有電影的資訊
  movies = movie_section.select('div.release_info_text')

  # 逐一解析電影信息並添加到 DataFrame
  for movie in movies:
    #取得中文名稱
    chinese_name = movie.select_one('div.release_movie_name a').text.strip()
    
    #取得英文名稱
    english_name = movie.select_one('div.en').text.strip()

    #取得上映日期
    release_date = movie.select_one('div.release_movie_time').text.strip()

    #取得期待度
    expectation = movie.select_one('div.leveltext span').text.strip()

    #添加電影信息到 DataFrame
    df = df.append({'chinese_name':chinese_name , 'english_name':english_name , 'release_date':release_date , 'expectation':expectation} , ignore_index=True)
    
# 將 DataFrame 存儲到 SQLite 數據庫
conn = sqlite3.connect('movie_info.db') #連結數據庫，如果不存在會自動創建
cursor = conn.cursor()

#創建數據表
cursor.execute('''CREATE TABLE IF NOT EXISTS movie
              (id INTEGER PRIMARY KEY AUTOINCREMENT , 
              chinese_name TEXT,
              english_nameTEXT,
              release_date TEXT,
              expectation TEXT);''')

#將 DataFrame 寫入數據庫
df.to_sql('movie' , conn , if_exists='replace' , index = False)

#關閉數據庫連結
conn.close()
